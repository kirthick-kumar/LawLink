from functools import wraps
from flask import flash, redirect, url_for
from flask_login import current_user

# Constants
admins = ['1']
rating_dict = {
    5: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•',
    4.7: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ–',
    4.5: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ—',
    4.2: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ˜',
    4: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ‘',
    3.7: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ–ğŸŒ‘',
    3.5: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ—ğŸŒ‘',
    3.2: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ˜ğŸŒ‘',
    3: 'ğŸŒ•ğŸŒ•ğŸŒ•ğŸŒ‘ğŸŒ‘',
    2.7: 'ğŸŒ•ğŸŒ•ğŸŒ–ğŸŒ‘ğŸŒ‘',
    2.5: 'ğŸŒ•ğŸŒ•ğŸŒ—ğŸŒ‘ğŸŒ‘',
    2.2: 'ğŸŒ•ğŸŒ•ğŸŒ˜ğŸŒ‘ğŸŒ‘',
    2: 'ğŸŒ•ğŸŒ•ğŸŒ‘ğŸŒ‘ğŸŒ‘',
    1.7: 'ğŸŒ•ğŸŒ–ğŸŒ‘ğŸŒ‘ğŸŒ‘',
    1.5: 'ğŸŒ•ğŸŒ—ğŸŒ‘ğŸŒ‘ğŸŒ‘',
    1.2: 'ğŸŒ•ğŸŒ˜ğŸŒ‘ğŸŒ‘ğŸŒ‘',
    1: 'ğŸŒ•ğŸŒ‘ğŸŒ‘ğŸŒ‘ğŸŒ‘',
}

def admin_only(function):
    """Decorator function to check if the current user is an admin"""
    @wraps(function)
    def wrapper_function(*args, **kwargs):
        if current_user.get_id() in admins:
            return function(*args, **kwargs)
        else:
            flash("Login in as an admin to access that page", "error")
            return redirect(url_for('login'))
    return wrapper_function